<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<description>Spring公共配置 </description>
	
	<!-- 通过属性文件注入属性Start -->
	<!-- <context:property-placeholder location="classpath:cache.properties" ignore-unresolvable="true"/> -->
	<!-- 通过属性文件注入属性end -->
	<!-- config aspectj -->
	<aop:aspectj-autoproxy />
	
	<!-- redis缓存配置 
	<bean id="JedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis_pool_maxTotal}" />
		<property name="maxIdle" value="${redis_pool_maxIdle}" />
		<property name="minIdle" value="${redis_pool_minIdle}" />
		<property name="maxWaitMillis" value="${redis_pool_maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis_pool_testOnBorrow}" />
		<property name="testOnReturn" value="${redis_pool_testOnReturn}" />
		<property name="testWhileIdle" value="${redis_pool_testWhileIdle}" />
	</bean>
	-->
	<!-- Jedis ConnectionFactory 
	<bean id="jedisConnFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis_host}" />
		<property name="port" value="${redis_port}" />
		<property name="password" value="${redis_password}" />
		<property name="timeout" value="${redis_timeout}" />
		<property name="usePool" value="true" />
		<property name="poolConfig" ref="JedisPoolConfig" />
	</bean>
	-->
	 <!-- 先配置工厂类 -->
	<bean id="jedisConnectionFactorysBuilder" class="com.shangpin.commons.redis.cluster.springdata.JedisConnectionFactorysBuilder" factory-method="build" />
		<!-- 这里使用factory-bean指定实例工厂类对象 -->
	<bean id="jedisConnectionFactory" factory-bean="jedisConnectionFactorysBuilder" factory-method="getRedidClusterConnFactoryByAppIdAndClusterId">
    	<!-- 指定factory-method的参数 -->
    	<constructor-arg name="appId" value="api"/>
    	<constructor-arg name="clusterId" value="default"/>
	</bean>
 
	<!-- redis template definition -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
		<property name="hashKeySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashValueSerializer">
			<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
	</bean>

</beans>