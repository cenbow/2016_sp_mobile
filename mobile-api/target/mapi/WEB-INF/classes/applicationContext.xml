<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
		default-lazy-init="true">
					    
	<context:property-placeholder location="classpath:jdbc.properties" />

	<import resource="classpath:applicationContext-spring.xml" />
    <import resource="classpath:cache-spring.xml" />

	<!-- 自动扫描与装配bean -->
	<context:component-scan base-package="com.shangpin">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
	<!-- SessionFactoryAPI -->
	<bean id="sessionFactoryAPI" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="configLocation" value="classpath:hibernateAPI.cfg.xml"></property>
		<property name="dataSource" ref="dataSourceAPI"/>
	</bean>
	<!-- API接口数据库 -->
	<bean id="dataSourceAPI" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">  
		<!-- 数据库连接信息 -->
		<property name="url" value="jdbc:mysql://wirelessapi.spidc1.com:3306/wirelessapi?characterEncoding=utf-8"></property>
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="username" value="writer"></property>
		<property name="password" value="wt@sp520"></property>
        <property name="maxActive" value="100"/>
        <property name="maxWait" value="60000"/>
        <property name="poolPreparedStatements" value="false"/>
        <property name="defaultAutoCommit" value="false"/>
        <property name="maxIdle" value="200" /> 
	    <property name="minIdle" value="2" />
	    <property name="removeAbandoned" value="true"/>
	    <property name="removeAbandonedTimeout" value="120"/>
	    <property name="logAbandoned" value="true"/>
	</bean>  
	<!-- 配置声明式事务管理，采用基于AOP的方式 -->
	<bean id="transactionManagerAPI" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactoryAPI"></property>
	</bean>
    <!-- sessionFactoryAPI事务通知 -->
    <tx:advice id="txAdviceAPI" transaction-manager="transactionManagerAPI">
        <tx:attributes>
            <tx:method name="insert*" propagation="REQUIRED" isolation="DEFAULT" />
            <tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT" />
            <tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT" />
            <tx:method name="save*" propagation="REQUIRED" isolation="DEFAULT" />
            <tx:method name="load*" propagation="REQUIRED" isolation="DEFAULT" read-only="true" />
            <tx:method name="get*" propagation="REQUIRED" isolation="DEFAULT" read-only="true" />
            <tx:method name="find*" propagation="REQUIRED" isolation="DEFAULT" read-only="true" />
            <tx:method name="execute*" propagation="REQUIRED" isolation="DEFAULT" read-only="true" />
            <tx:method name="*" propagation="REQUIRED" isolation="DEFAULT" />
        </tx:attributes>
    </tx:advice>
    <aop:config>
    	<!-- 定义在com.shangpin.wireless.api.service该包或者其子包下的 任意方法-->
        <aop:advisor advice-ref="txAdviceAPI" pointcut="execution(* com.shangpin.wireless.api.service..*.*(..))"/>
    </aop:config>
    
	<!-- 配置声明式事务管理，采用基于注解的方式 
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"/>
	-->
	<bean id="imageCaptchaService"
		class="com.octo.captcha.service.image.DefaultManageableImageCaptchaService">
		<constructor-arg type="com.octo.captcha.service.captchastore.CaptchaStore"
			ref="cacheCaptchaStore" index="0" />
		<constructor-arg type="com.octo.captcha.engine.CaptchaEngine"
			ref="captchaEngine" index="1" />
		<constructor-arg index="2" value="180" />
		<constructor-arg index="3" value="100000" />
		<constructor-arg index="4" value="75000" />
	</bean>
	<!-- <bean id="fastHashMapCaptchaStore"
		class="com.octo.captcha.service.captchastore.FastHashMapCaptchaStore" /> -->
	<bean id="cacheCaptchaStore"
		class="com.shangpin.wireless.api.util.CacheCaptchaStore" />
	<bean id="captchaEngine"
		class="com.shangpin.wireless.api.util.DefaultImagCatptchaEngine" />
</beans>
